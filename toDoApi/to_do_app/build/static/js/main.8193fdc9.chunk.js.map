{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","this","e","target","name","value","setState","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","task","csrftoken","fetch","method","headers","body","JSON","stringify","then","response","preventDefault","console","log","url","_method","catch","error","json","data","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8193fdc9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      todoList:[],\n      activeItem:{\n        id:null,\n        title:'',\n        completed:false\n      },\n      editing:false\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie = this.getCookie.bind(this)\n    this.startEdit= this.startEdit.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.strikeUnstrike = this.strikeUnstrike.bind(this)\n  };\n\n  componentWillMount(){\n    this.fetchTasks()\n  }\n\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n    //console.log(\"Name\",name)\n    //console.log(\"Value\",value)\n\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n\n  getCookie(name) {\n \tlet cookieValue = null;\n\t if (document.cookie && document.cookie !== '') {\n\t\t const cookies = document.cookie.split(';');\n\t\t for (let i = 0; i < cookies.length; i++) {\n\t\t\t const cookie = cookies[i].trim();\n\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t break;\n\t\t }\n\t }\n\t }\n\t return cookieValue;\n\t }\n\n\n    strikeUnstrike(task){\n     task.completed = !task.completed\n    var csrftoken = this.getCookie('csrftoken')\n    fetch(`http://127.0.0.1:8000/api/task-update/${task.id}/`,{\n    method:'PUT',\n    headers:{\n\t'Content-type':'application/json',\n\t'X-CSRFToken':csrftoken,\n    },\n        body:JSON.stringify({'completed':task.completed,'title':task.title})    \n    }).then((response)=>{\n    this.fetchTasks()\n    })\n     // console.log(\"Task:\",task.completed)   \n    }\n\n   startEdit(task){\n    this.setState({\n    activeItem:task,\n    editing:true,    \n    })         \n   } \n\n\n  deleteItem(task){\n    var csrftoken = this.getCookie('csrftoken')\n\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`,{\n    method:'DELETE',\n    headers:{\n\t'Content-type':'application/json',\n\t'X-CSRFToken':csrftoken,\n    },\n    }).then((response)=>{\n    this.fetchTasks()\n    })\n  }  \n\n  handleSubmit(e){\n    e.preventDefault()\n    console.log('Item',this.state.activeItem)\n\n    var csrftoken = this.getCookie('csrftoken')\n\n    var url = 'http://127.0.0.1:8000/api/task-create/'\n    var _method = 'POST'  \n\n    if(this.state.editing ==true){\n        url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`\n        this.setState({\n          editing:false  \n        })\n        _method = 'PUT'\n\n    }\n\n\n    fetch(url,{\n      method: _method,\n      headers:{\n\t'Content-type':'application/json',\n\t'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n\tthis.fetchTasks()\n      \tthis.setState({\n\tactiveItem:{\n\tid:null,\n\t  title:'',\n\t  completed: false,\n\t}\n\t})\n    }).catch(function(error){\n\tconsole.log('Error:',error)\n    })\n  }\n\n  fetchTasks(){\n   // console.log(\"Fetching..\")\n\n    fetch('http://127.0.0.1:8000/api/task-list')\n    .then(response => response.json())\n    .then(data=>this.setState({\n      todoList:data\n    }))\n  }\n\n\n  render(){\n    var tasks = this.state.todoList\n    var self = this   \n    return(\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <div className=\"flex-wrapper\">\n                <div style={{flex:6}}>\n                  <input onChange={this.handleChange} className=\"form-control\" value={this.state.activeItem.title}  id=\"title\" type=\"text\" name=\"title\" placeholder=\"Add task\"/>\n                </div>\n                <div style={{flex:6}}>\n                  <input className=\"btn btn-warning\" id=\"submit\" type=\"submit\" name=\"Add\"/>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">\n            {\n              tasks.map(function(task, index){\n                return(\n                  <div key={index} className=\"task-wrapper flex-wrapper\">\n\n                    <div onClick={()=>self.strikeUnstrike(task)} style={{flex:7}}>\n\n                    {task.completed == false ? (\n                      <span>{task.title}</span>\n                    ) : (\n                      <strike>{task.title}</strike>\n                    )}\n                    </div>\n                    <div style={{flex:1}}>\n                      <button className=\"btn btn-sm btn-outline-info\" onClick={()=>self.startEdit(task)} >Edit</button>\n                    </div>\n                    <div style={{flex:1}}>\n                      <button className=\"btn btn-sm btn-outline-danger delete\" onClick={()=>self.deleteItem(task)}>-</button>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}